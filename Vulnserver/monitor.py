from pydbg import *
from pydbg.defines import *
import utils
import subprocess
import sys , socket
from threading import Thread

crash = 0
work = 1
def server(tmp):
    print("[+] Process monitoring started")
    global crash, work
    HOST = 'your ip'
    PORT = 4444
    while True and work == 1:
        s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.bind((HOST, PORT))
        s.listen(1)
        conn , addr = s.accept()
        conn.sendall(str(crash))
        conn.close()
def detect_overflow(dbg):
    global crash, work
    if dbg.dbg.u.Exception.dwFirstChance:
        print("Access Violation Detected")
        crash = 1
        work = 0
        dbg.terminate_process()
        return DBG_EXCEPTION_NOT_HANDLED
thread = Thread(target = server, args = (10, ))
thread.start()
p = subprocess.Popen("C:\\Users\\bugra\\Desktop\\Exploit-Development\\Vulnserver\\vulnserver.exe")
pid = p.pid

dbg = pydbg()
dbg.attach(int(pid))
dbg.set_callback(EXCEPTION_ACCESS_VIOLATION,detect_overflow)
dbg.run()